@inproceedings{10.1145/22145.22178,
author = {Goldwasser, S and Micali, S and Rackoff, C},
title = {The Knowledge Complexity of Interactive Proof-Systems},
year = {1985},
isbn = {0897911512},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/22145.22178},
doi = {10.1145/22145.22178},
booktitle = {Proceedings of the Seventeenth Annual ACM Symposium on Theory of Computing},
pages = {291–304},
numpages = {14},
location = {Providence, Rhode Island, USA},
series = {STOC '85}
}

@article{10.1145/146585.146609,
author = {Shamir, Adi},
title = {IP = PSPACE},
year = {1992},
issue_date = {Oct. 1992},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {39},
number = {4},
issn = {0004-5411},
url = {https://doi.org/10.1145/146585.146609},
doi = {10.1145/146585.146609},
abstract = {In this paper, it is proven that when both randomization and interaction are allowed, the proofs that can be verified in polynomial time are exactly those proofs that can be generated with polynomial space.},
journal = {J. ACM},
month = {oct},
pages = {869–877},
numpages = {9},
keywords = {PSPACE, IP, interactive proofs}
}

@article{10.1145/146585.146605,
author = {Lund, Carsten and Fortnow, Lance and Karloff, Howard and Nisan, Noam},
title = {Algebraic Methods for Interactive Proof Systems},
year = {1992},
issue_date = {Oct. 1992},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {39},
number = {4},
issn = {0004-5411},
url = {https://doi.org/10.1145/146585.146605},
doi = {10.1145/146585.146605},
abstract = {A new algebraic technique for the construction of interactive proof systems is presented. Our technique is used to prove that every language in the polynomial-time hierarchy has an interactive proof system. This technique played a pivotal role in the recent proofs that IP = PSPACE [28] and that MIP = NEXP [4].},
journal = {J. ACM},
month = {oct},
pages = {859–868},
numpages = {10},
keywords = {interactive proof systems}
}

@inproceedings{10.1145/22145.22192,
	author = {Babai, L},
	title = {Trading Group Theory for Randomness},
	year = {1985},
	isbn = {0897911512},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/22145.22192},
	doi = {10.1145/22145.22192},
	abstract = {In a previous paper [BS] we proved, using the elements of the theory of nilpotent groups, that some of the fundamental computational problems in matriz groups belong to NP. These problems were also shown to belong to coNP, assuming an unproven hypothesis concerning finite simple groups.The aim of this paper is to replace most of the (proven and unproven) group theory of [BS] by elementary combinatorial arguments. The result we prove is that relative to a random oracle B, the mentioned matrix group problems belong to (NP∩coNP)B.The problems we consider are membership in and order of a matrix group given by a list of generators. These problems can be viewed as multidimensional versions of a close relative of the discrete logarithm problem. Hence NP∩coNP might be the lowest natural complexity class they may fit in.We remark that the results remain valid for black box groups where group operations are performed by an oracle.The tools we introduce seem interesting in their own right. We define a new hierarchy of complexity classes AM(k) “just above NP”, introducing Arthur vs. Merlin games, the bounded-away version of Papdimitriou's Games against Nature. We prove that in spite of their analogy with the polynomial time hierarchy, the finite levels of this hierarchy collapse to AM=AM(2). Using a combinatorial lemma on finite groups [BE], we construct a game by which the nondeterministic player (Merlin) is able to convince the random player (Arthur) about the relation [G]=N provided Arthur trusts conclusions based on statistical evidence (such as a Slowly-Strassen type “proof” of primality).One can prove that AM consists precisely of those languages which belong to NPB for almost every oracle B.Our hierarchy has an interesting, still unclarified relation to another hierarchy, obtained by removing the central ingredient from the User vs. Expert games of Goldwasser, Micali and Rackoff.},
	booktitle = {Proceedings of the Seventeenth Annual ACM Symposium on Theory of Computing},
	pages = {421–429},
	numpages = {9},
	location = {Providence, Rhode Island, USA},
	series = {STOC '85}
}

@inproceedings{10.1145/12130.12137,
	author = {Goldwasser, S and Sipser, M},
	title = {Private Coins versus Public Coins in Interactive Proof Systems},
	year = {1986},
	isbn = {0897911938},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/12130.12137},
	doi = {10.1145/12130.12137},
	booktitle = {Proceedings of the Eighteenth Annual ACM Symposium on Theory of Computing},
	pages = {59–68},
	numpages = {10},
	location = {Berkeley, California, USA},
	series = {STOC '86}
}

@article{LAUTEMANN1983215,
title = {BPP and the polynomial hierarchy},
journal = {Information Processing Letters},
volume = {17},
number = {4},
pages = {215-217},
year = {1983},
issn = {0020-0190},
doi = {https://doi.org/10.1016/0020-0190(83)90044-3},
url = {https://www.sciencedirect.com/science/article/pii/0020019083900443},
author = {Clemens Lautemann},
keywords = {Complexity, probabilistic Turing machines, polynomial hierarchy},
abstract = {BPP is the class of all sets that can be divided by a probabilistic Turing machine with bounded error probability within a polynomial time bound. Sipser (1983) showed that BPP is contained in the polynomial hierarchy of Meyer and Stockmeyer. In this paper it is shown by pure counting arguments that BPP is contained in ΣP2, the second level of the hierarchy.}
}

@article{10.1016/S0020-0190(98)00116-1,
	author = {Goldreich, Oded and H\r{a}stad, Johan},
	title = {On the Complexity of Interactive Proofs with Bounded Communication},
	year = {1998},
	issue_date = {Aug. 31, 1998},
	publisher = {Elsevier North-Holland, Inc.},
	address = {USA},
	volume = {67},
	number = {4},
	issn = {0020-0190},
	url = {https://doi.org/10.1016/S0020-0190(98)00116-1},
	doi = {10.1016/S0020-0190(98)00116-1},
	journal = {Inf. Process. Lett.},
	month = {aug},
	pages = {205–214},
	numpages = {10},
	keywords = {theory of computation, computational complexicity}
}

@article{10.1145/2699436,
	author = {Goldwasser, Shafi and Kalai, Yael Tauman and Rothblum, Guy N.},
	title = {Delegating Computation: Interactive Proofs for Muggles},
	year = {2015},
	issue_date = {August 2015},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	volume = {62},
	number = {4},
	issn = {0004-5411},
	url = {https://doi.org/10.1145/2699436},
	doi = {10.1145/2699436},
	abstract = {In this work we study interactive proofs for tractable languages. The (honest) prover should be efficient and run in polynomial time or, in other words, a “muggle”.1 The verifier should be super-efficient and run in nearly linear time. These proof systems can be used for delegating computation: a server can run a computation for a client and interactively prove the correctness of the result. The client can verify the result’s correctness in nearly linear time (instead of running the entire computation itself).Previously, related questions were considered in the holographic proof setting by Babai et al. [1991b] in the argument setting under computational assumptions by Kilian, and in the random oracle model by Micali [1994]. Our focus, however, is on the original interactive proof model where no assumptions are made on the computational power or adaptiveness of dishonest provers.Our main technical theorem gives a public coin interactive proof for any language computable by a log-space uniform boolean circuit with depth d and input length n. The verifier runs in time n · poly(d, log(n)) and space O(log(n)), the communication complexity is poly(d, log(n)), and the prover runs in time poly(n). In particular, for languages computable by log-space uniform NC (circuits of polylog(n) depth), the prover is efficient, the verifier runs in time n · polylog(n) and space O(log(n)), and the communication complexity is polylog(n). Using this theorem we make progress on several questions.--- We show how to construct 1-round computationally sound arguments with polylog communication for any log-space uniform NC computation. The verifier runs in quasi-linear time. This result uses a recent transformation of Kalai and Raz from public coin interactive proofs to 1-round arguments. The soundness of the argument system is based on the existence of a PIR scheme with polylog communication.--- We construct interactive proofs with public coin, log-space, poly-time verifiers for all of P are given. This settles an open question regarding the expressive power of proof systems with such verifiers.--- We construct zero-knowledge interactive proofs are given with communication complexity quasi-linear in the witness length for any NP language verifiable in NC, based on the existence of 1-way functions.--- We construct probabilistically checkable arguments (a model due to Kalai and Raz) of size polynomial in the witness length (rather than instance length) for any NP language verifiable in NC, under computational assumptions, are provided.},
	journal = {J. ACM},
	month = {sep},
	articleno = {27},
	numpages = {64},
	keywords = {interactive proofs, Delegating computation, verifiable computing}
}

@inproceedings{10.1145/28395.28418,
	author = {Fortnow, L.},
	title = {The Complexity of Perfect Zero-Knowledge},
	year = {1987},
	isbn = {0897912217},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/28395.28418},
	doi = {10.1145/28395.28418},
	abstract = {A Perfect Zero-Knowledge interactive proof system convinces a verifier that a string is in a language without revealing any additional knowledge in an information-theoretic sense. We show that for any language that has a perfect zero-knowledge proof system, its complement has a short interactive protocol. This result implies that there are not any perfect zero-knowledge protocols for NP-complete languages unless the polynomial time hierarchy collapses. This paper demonstrates that knowledge complexity can be used to show that a language is easy to prove.},
	booktitle = {Proceedings of the Nineteenth Annual ACM Symposium on Theory of Computing},
	pages = {204–209},
	numpages = {6},
	location = {New York, New York, USA},
	series = {STOC '87}
}

@inproceedings{10.5555/646752.704748,
	author = {Impagliazzo, Russell and Yung, Moti},
	title = {Direct Minimum-Knowledge Computations},
	year = {1987},
	isbn = {3540187960},
	publisher = {Springer-Verlag},
	address = {Berlin, Heidelberg},
	abstract = {We present a protocol scheme which directly simulates any given computation, defined on any computational device, in a minimum-knowledge fashion. We also present a scheme for simulation of computation in dual (perfect) minimum-knowledge fashion. Using the simulation protocol, we can assure that one user transfers to another user exactly the result of a given computation and nothing more.The simulation is direct and efficient; it extends, simplifies and unifies important recent results which have useful applications in cryptographic protocol design. Our technique can be used to implement several different sorts of transfer of knowledge, including: transfer of computational results, proving possession of information, proving knowledge of knowledge, gradual and adaptive revealing of information, and commitment to input values.The novelty of the simulation technique is the separation of the data encryption from the encryption of the device's structural (or control) information.},
	booktitle = {A Conference on the Theory and Applications of Cryptographic Techniques on Advances in Cryptology},
	pages = {40–51},
	numpages = {12},
	series = {CRYPTO '87}
}

@article{esgot,
author = {Even, Shimon and Goldreich, Oded and Lempel, Abraham},
title = {A randomized protocol for signing contracts},
year = {1985},
issue_date = {June 1985},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {28},
number = {6},
issn = {0001-0782},
url = {https://doi.org/10.1145/3812.3818},
doi = {10.1145/3812.3818},
abstract = {Randomized protocols for signing contracts, certified mail, and flipping a coin are presented. The protocols use a 1-out-of-2 oblivious transfer subprotocol which is axiomatically defined.The 1-out-of-2 oblivious transfer allows one party to transfer exactly one secret, out of two recognizable secrets, to his counterpart. The first (second) secret is received with probability one half, while the sender is ignorant of which secret has been received.An implementation of the 1-out-of-2 oblivious transfer, using any public key cryptosystem, is presented.},
journal = {Commun. ACM},
month = {jun},
pages = {637–647},
numpages = {11}
}

@InProceedings{dualmode,
author="Peikert, Chris
and Vaikuntanathan, Vinod
and Waters, Brent",
editor="Wagner, David",
title="A Framework for Efficient and Composable Oblivious Transfer",
booktitle="Advances in Cryptology -- CRYPTO 2008",
year="2008",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="554--571",
abstract="We propose a simple and general framework for constructing oblivious transfer (OT) protocols that are efficient, universally composable, and generally realizable under any one of a variety of standard number-theoretic assumptions, including the decisional Diffie-Hellman assumption, the quadratic residuosity and decisional composite residuosity assumptions, and worst-case lattice assumptions.",
isbn="978-3-540-85174-5"
}


@InProceedings{iknp,
author="Ishai, Yuval
and Kilian, Joe
and Nissim, Kobbi
and Petrank, Erez",
editor="Boneh, Dan",
title="Extending Oblivious Transfers Efficiently",
booktitle="Advances in Cryptology - CRYPTO 2003",
year="2003",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="145--161",
abstract="We consider the problem of extending oblivious transfers: Given a small number of oblivious transfers ``for free,'' can one implement a large number of oblivious transfers? Beaver has shown how to extend oblivious transfers given a one-way function. However, this protocol is inefficient in practice, in part due to its non-black-box use of the underlying one-way function.",
isbn="978-3-540-45146-4"
}

@misc{vole,
      author = {Elette Boyle and Geoffroy Couteau and Niv Gilboa and Yuval Ishai and Lisa Kohl and Peter Scholl},
      title = {Efficient Pseudorandom Correlation Generators: Silent OT Extension and More},
      howpublished = {Cryptology ePrint Archive, Paper 2019/448},
      year = {2019},
      note = {\url{https://eprint.iacr.org/2019/448}},
      url = {https://eprint.iacr.org/2019/448}
}

@misc{softspokenot,
      author = {Lawrence Roy},
      title = {SoftSpokenOT: Communication--Computation Tradeoffs in OT Extension},
      howpublished = {Cryptology ePrint Archive, Paper 2022/192},
      year = {2022},
      note = {\url{https://eprint.iacr.org/2022/192}},
      url = {https://eprint.iacr.org/2022/192}
}

@inproceedings{beaver1996correlated,
	title={Correlated pseudorandomness and the complexity of private computations},
	author={Beaver, Donald},
	booktitle={Proceedings of the twenty-eighth annual ACM symposium on Theory of computing},
	pages={479--488},
	year={1996}
}

@inproceedings{lindell2013feasibility,
	title={On the feasibility of extending oblivious transfer},
	author={Lindell, Yehuda and Zarosim, Hila},
	booktitle={Theory of Cryptography Conference},
	pages={519--538},
	year={2013},
	organization={Springer}
}

@article{byali2017fast,
	title={Fast and universally-composable oblivious transfer and commitment scheme with adaptive security},
	author={Byali, Megha and Patra, Arpita and Ravi, Divya and Sarkar, Pratik},
	journal={Cryptology ePrint Archive},
	year={2017}
}

@article{goldreich1990note,
	title={A note on computational indistinguishability},
	author={Goldreich, Oded},
	journal={Information Processing Letters},
	volume={34},
	number={6},
	pages={277--281},
	year={1990},
	publisher={Elsevier}
}

@inproceedings{micali1987play,
	title={How to play any mental game},
	author={Micali, Silvio and Goldreich, Oded and Wigderson, Avi},
	booktitle={Proceedings of the Nineteenth ACM Symp. on Theory of Computing, STOC},
	pages={218--229},
	year={1987},
	organization={ACM New York, NY, USA}
}

@book{goldreich2004foundations,
	title={Foundations of Cryptography, Volume 2},
	author={Goldreich, Oded},
	year={2004},
	publisher={Cambridge university press Cambridge}
}

@inproceedings{impagliazzo1989limits,
	title={Limits on the provable consequences of one-way permutations},
	author={Impagliazzo, Russell and Rudich, Steven},
	booktitle={Proceedings of the twenty-first annual ACM symposium on Theory of computing},
	pages={44--61},
	year={1989}
}